plugins {
    id 'java'
    id 'jacoco'
}

group 'com.epam.esm'
version '1.0'

repositories {
    mavenCentral()
}

task jacocoGenerateRootReport(type: JacocoReport, group: 'Test Reporting') {
    description = 'Generates aggregate report from all subprojects.'

    def includeFilter = ['**/build/classes/java/**/*.class']
    def excludeFilter = ['']
    def classTree = fileTree(dir: "${rootProject.projectDir}", includes: includeFilter,  excludes: excludeFilter)
    def sourceTree = fileTree(dir: "${rootProject.projectDir}", includes: ['**/src/main/java/**/*.*'])
    def executionTree = fileTree(dir: "${rootProject.projectDir}", includes: ['**/build/jacoco/*.exec'])

    classDirectories.from = files([classTree])
    sourceDirectories.from = files([sourceTree])
    executionData.from = files([executionTree])

    reports {
        xml.required = true
        xml.destination file("${rootProject.projectDir}/build/reports/jacoco/report.xml")
    }
}


dependencies {
    testImplementation(platform('org.junit:junit-bom:5.8.1'))
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'
    compileOnly 'org.projectlombok:lombok:1.18.22'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoGenerateRootReport
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    repositories {
        mavenCentral()
    }
    test {
        useJUnitPlatform()
    }
    dependencies {
        testImplementation(platform('org.junit:junit-bom:5.8.1'))
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'
        compileOnly 'org.projectlombok:lombok:1.18.22'
    }
}